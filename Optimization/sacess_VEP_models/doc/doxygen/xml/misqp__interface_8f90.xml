<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="misqp__interface_8f90" kind="file">
    <compoundname>misqp_interface.f90</compoundname>
    <innerclass refid="classmisqp__interface" prot="public">misqp_interface</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="classmisqp__interface" refkind="compound"><highlight class="keyword">MODULE</highlight><highlight class="normal"><sp/><ref refid="classmisqp__interface" kindref="compound">misqp_interface</ref></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">USE<sp/></highlight><highlight class="normal">iso_c_binding</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">USE<sp/></highlight><highlight class="normal"><ref refid="classscattersearchtypes" kindref="compound">scattersearchtypes</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">USE<sp/></highlight><highlight class="normal"><ref refid="classcommon__functions" kindref="compound">common_functions</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">USE<sp/></highlight><highlight class="normal"><ref refid="classqsort__module" kindref="compound">qsort_module</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">USE<sp/></highlight><highlight class="normal"><ref refid="classfuncevalinterface" kindref="compound">funcevalinterface</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENMP</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">USE<sp/></highlight><highlight class="normal">omp_lib</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>USE<sp/>MISQP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">CONTAINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">SUBROUTINE<sp/></highlight><highlight class="normal">evaluate_gradient<sp/>(<sp/>problem1,exp1,opts1,<sp/>x,<sp/>f,<sp/><sp/>g,<sp/>ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>fobj_mysqp,<sp/>pass_misqp,<sp/>&amp;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>neq,<sp/>fitnessfunction<sp/><sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_funptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>fitnessfunction</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_funptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>fobj_mysqp</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1problem" kindref="compound">problem</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>problem1</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_ptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>exp1</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1opts" kindref="compound">opts</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>opts1</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>x,<sp/>g,<sp/>df</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:,:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>dg</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/><sp/>::<sp/>x_aux</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>f</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>ncont,<sp/>m,<sp/>neq,<sp/>pass_misqp</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER(C_LONG)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>nfunc</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>::<sp/>eps,<sp/>feps,<sp/>epsa,<sp/>epsi</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>::<sp/>callfitnessfunctionfortranopenmp2</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>wa1</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>index1,<sp/>i,<sp/>j</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pass_misqp<sp/>.EQ.<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>USAR<sp/>fobj_mysqp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(x_aux(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(x)))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps<sp/>=<sp/></highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(1.0d-7,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index1=ncont</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feps=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(wa1(m))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa1=0</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,index1</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsa<sp/>=<sp/>eps<sp/>*<sp/>max(<sp/></highlight><highlight class="keywordtype">REAL(1d-5,KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>,abs(x(i)))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsi<sp/>=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(1d0,kind=selected_real_kind(p=precision_d,r=range_d))/epsa</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_aux(i)<sp/>=<sp/>x(i)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(i)<sp/>=<sp/>x(i)<sp/>+<sp/>epsa</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feps<sp/>=<sp/>callfitnessfunctionfortranopenmp2(fitnessfunction,<sp/>exp1,<sp/>x,<sp/>wa1,<sp/>0)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfunc<sp/>=<sp/>nfunc<sp/><sp/>+<sp/>1</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df(i)=epsi*(feps-f)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,m</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg(j,i)<sp/>=<sp/>epsi<sp/>*(wa1(j)-g(j))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(i)<sp/>=<sp/>x_aux(i)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(wa1)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(x_aux)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">END<sp/>SUBROUTINE<sp/></highlight><highlight class="normal">evaluate_gradient</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENMP</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="keyword">SUBROUTINE<sp/></highlight><highlight class="normal">evaluate_gradient_parallel<sp/>(<sp/>problem1,exp1,opts1,<sp/>x,<sp/>f,<sp/><sp/>g,<sp/>ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>fobj_mysqp,<sp/>pass_misqp,<sp/>&amp;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>neq,<sp/>fitnessfunction<sp/><sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_funptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>fitnessfunction</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_funptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>fobj_mysqp</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1problem" kindref="compound">problem</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>problem1</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_ptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>exp1</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1opts" kindref="compound">opts</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>opts1</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>x,<sp/>g,<sp/>df</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:,:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>dg</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/><sp/>::<sp/>x_aux</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>f</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>ncont,<sp/>m,<sp/>neq,<sp/>pass_misqp</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER(C_LONG)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>nfunc</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>::<sp/>eps,<sp/>feps,<sp/>epsa,<sp/>epsi</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>::<sp/>callfitnessfunctionfortranopenmp2</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>wa1</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>index1,<sp/>i,<sp/>j,<sp/>idproc</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pass_misqp<sp/>.EQ.<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>USAR<sp/>fobj_mysqp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps<sp/>=<sp/></highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(1.0d-7,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index1=ncont</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feps=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!$OMP<sp/>PARALLEL<sp/>DO<sp/>SCHEDULE(DYNAMIC,1)<sp/><sp/>FIRSTPRIVATE(IDPROC)<sp/>PRIVATE(i,epsa,epsi,feps,j,x_aux,wa1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/>REDUCTION(+:nfunc)<sp/>DEFAULT(SHARED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,index1</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(wa1(m))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(x_aux(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(x)))</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idproc<sp/>=<sp/>omp_get_thread_num()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa1=0</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsa<sp/>=<sp/>eps<sp/>*<sp/>max(</highlight><highlight class="keywordtype">REAL(1d-5,KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>,abs(x(i)))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsi=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(1d0,kind=selected_real_kind(p=precision_d,r=range_d))/epsa</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_aux=x</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_aux(i)<sp/>=<sp/>x(i)<sp/>+<sp/>epsa</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feps<sp/>=<sp/>callfitnessfunctionfortranopenmp2(fitnessfunction,<sp/>exp1,<sp/>x_aux,<sp/>wa1,<sp/>idproc)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfunc<sp/>=<sp/>nfunc<sp/><sp/>+<sp/>1</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df(i)=epsi*(feps-f)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,m</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg(j,i)<sp/>=<sp/>epsi<sp/>*(wa1(j)-g(j))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(wa1)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(x_aux)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/></highlight><highlight class="comment">!OMP<sp/>END<sp/>PARALLEL<sp/>DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">END<sp/>SUBROUTINE<sp/></highlight><highlight class="normal">evaluate_gradient_parallel</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">SUBROUTINE<sp/></highlight><highlight class="normal">fobj_misqp(fitnessfunction,<sp/>exp1,<sp/>x,<sp/>g,<sp/>neq,<sp/>local_solver_vars,<sp/>problem1)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1local__solver__help__vars" kindref="compound">local_solver_help_vars</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>local_solver_vars</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_ptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>exp1</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_funptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>fitnessfunction<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(IN)</highlight><highlight class="normal"><sp/>::<sp/>neq</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>g</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1problem" kindref="compound">problem</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>problem1<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">!global<sp/>n_fun_eval<sp/>ccll<sp/>ccuu<sp/>n_upper<sp/>n_lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">!c=[];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">!if<sp/>~isempty(ccll)<sp/>|<sp/>~isempty(ccuu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>[fx,ggg]<sp/>=<sp/>feval(fobj,x,varargin{:});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">!else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>[fx]<sp/>=<sp/>feval(fobj,x,varargin{:});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>ggg=[];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">!end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">!n_fun_eval<sp/>=<sp/>n_fun_eval<sp/>+<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">!ninequ=length(n_upper);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">!for<sp/>i=1:ninequ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>c=[c<sp/>ccuu(n_upper(i))-ggg(n_upper(i))];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">!end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">!nineql=length(n_lower);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">!for<sp/>j=1:nineql</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>c=[c<sp/>ggg(n_lower(j))-ccll(n_lower(j))];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">!end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">!cx=[ggg(1:neq)<sp/>c];<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">END<sp/>SUBROUTINE<sp/></highlight><highlight class="normal">fobj_misqp</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">!<sp/>callfitnessfunctionfortranopenmp2(fitnessfunction,<sp/>exp1,<sp/>x,<sp/>g_aux,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">SUBROUTINE<sp/></highlight><highlight class="normal">ssm_aux_local_misqp<sp/>(problem1,local_solver_vars)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1problem" kindref="compound">problem</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>problem1</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1local__solver__help__vars" kindref="compound">local_solver_help_vars</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>local_solver_vars</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>n_upper,<sp/>n_lower,<sp/>n_upper_aux,<sp/>n_lower_aux</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>clinf,<sp/>cuinf<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>i,<sp/>j,<sp/>contador,<sp/>delete</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">CHARACTER(len<sp/>=<sp/>2)</highlight><highlight class="normal"><sp/>::<sp/>typesearch</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>ccuu</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>ccll<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">!<sp/>SSM_AUX_LOCAL<sp/>CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(problem1%CU)<sp/>)<sp/></highlight><highlight class="keywordflow">THEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(ccuu(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(problem1%CU)))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(ccll(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(problem1%CL)))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccuu<sp/>=<sp/>problem1%CU</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccll<sp/>=<sp/>problem1%CL</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(n_upper(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(problem1%CU)))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(n_lower(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(problem1%CL)))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_upper<sp/>=<sp/><sp/>(/<sp/>(i,<sp/>i<sp/>=<sp/>1,<sp/></highlight><highlight class="keyword">size</highlight><highlight class="normal">(problem1%CU))<sp/>/)<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_lower<sp/>=<sp/>n_upper</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typesearch<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EQ&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>find_in_vector(problem1%CU,<sp/>infinite,<sp/>cuinf,<sp/>typesearch)<sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(cuinf))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>reajust_index(cuinf)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(n_upper_aux(<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(n_upper)<sp/>-<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(cuinf)<sp/><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">DO</highlight><highlight class="normal"><sp/>i=1,<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(n_upper)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">DO</highlight><highlight class="normal"><sp/>j=1,<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(cuinf)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(i<sp/>.EQ.<sp/>cuinf(j)<sp/>)<sp/></highlight><highlight class="keywordflow">THEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>IF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(delete<sp/>.NE.<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">THEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_upper_aux(contador)<sp/>=<sp/>n_upper(i)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador<sp/>=<sp/>contador<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>IF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>move_alloc(n_upper_aux,<sp/>n_upper)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(cuinf)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>find_in_vector(problem1%CL,<sp/>-infinite,<sp/>clinf,<sp/>typesearch)<sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(clinf))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>reajust_index(clinf)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(n_lower_aux(<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(n_lower)<sp/>-<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(clinf)<sp/><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">DO</highlight><highlight class="normal"><sp/>i=1,<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(n_lower)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">DO</highlight><highlight class="normal"><sp/>j=1,<sp/></highlight><highlight class="keyword">SIZE</highlight><highlight class="normal">(clinf)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(i<sp/>.EQ.<sp/>clinf(j)<sp/>)<sp/></highlight><highlight class="keywordflow">THEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">EXIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>IF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(delete<sp/>.NE.<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">THEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_lower_aux(contador)<sp/>=<sp/>n_lower(i)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador<sp/>=<sp/>contador<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>IF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>move_alloc(n_lower_aux,<sp/>n_lower)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(clinf)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%N_UPPER<sp/>=<sp/>n_upper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%N_LOWER<sp/>=<sp/>n_lower</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>IF</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">END<sp/>SUBROUTINE<sp/></highlight><highlight class="normal">ssm_aux_local_misqp</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">SUBROUTINE<sp/></highlight><highlight class="normal">run_misqp(<sp/>problem1,exp1,opts1,fitnessfunction,acc,<sp/>x0,<sp/>fval,<sp/>nfunc,<sp/>ifail,<sp/>g,<sp/>local_solver_vars<sp/><sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1problem" kindref="compound">problem</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>problem1</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1local__solver__help__vars" kindref="compound">local_solver_help_vars</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>local_solver_vars<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1opts" kindref="compound">opts</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>opts1</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_ptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>exp1</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal">c_funptr</highlight><highlight class="keywordtype">)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>fitnessfunction<sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">TYPE(</highlight><highlight class="normal"><ref refid="structscattersearchtypes_1_1outfuction" kindref="compound">outfuction</ref></highlight><highlight class="keywordtype">)</highlight><highlight class="normal"><sp/>::<sp/>outfunct</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>acc,<sp/>fval</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::g</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>x0</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER(C_LONG)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::<sp/>nfunc</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/>::ifail</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>x,<sp/>g_aux,<sp/>x_best,<sp/>g_best</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>u,<sp/>df</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:,:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>b,<sp/>dg</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">CHARACTER(len<sp/>=<sp/>2)</highlight><highlight class="normal"><sp/>::<sp/>typesearch</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>i,j,delete,<sp/>contador</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>n,<sp/>m,<sp/>me,<sp/>mme,<sp/>iprint,<sp/>ngrad,<sp/>ncont</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>working<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">LOGICAL</highlight><highlight class="normal"><sp/>::<sp/>resopt</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>maxit,<sp/>maxpen,<sp/>maxund,<sp/>mode,<sp/>nonmon,<sp/>maxnde</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>::<sp/>accqp</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal"><sp/>::<sp/>f_ls,<sp/>f,<sp/>f_best</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>g_ls,x_ls,xl_ls,xu_ls</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>lrw,<sp/>liw,<sp/>llw</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(KIND=SELECTED_REAL_KIND(P=PRECISION_D,R=RANGE_D))</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>rw</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">LOGICAL</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>lw</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">DIMENSION(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">ALLOCATABLE</highlight><highlight class="normal"><sp/>::<sp/>iw</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">REAL(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>callfitnessfunctionfortranopenmp2</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>exitloop,<sp/>size_upper,<sp/>size_lower,<sp/>ite</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>idp</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>checkcooperativemigrationcriteriacessinner</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER</highlight><highlight class="normal"><sp/>::<sp/>mig,<sp/>dest,<sp/>cooperativempitestess</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">INTEGER(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>getopenmpoption,<sp/>openmp_pos</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncont<sp/>=<sp/></highlight><highlight class="keyword">size</highlight><highlight class="normal">(x0)<sp/>-<sp/>problem1%int_var<sp/>-<sp/>problem1%bin_var</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>problem1%int_var<sp/>+<sp/>problem1%bin_var<sp/>+<sp/>ncont</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<sp/></highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(local_solver_vars%N_UPPER))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_upper<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_upper<sp/>=<sp/></highlight><highlight class="keyword">size</highlight><highlight class="normal">(local_solver_vars%N_UPPER)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<sp/></highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(local_solver_vars%N_LOWER))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_lower<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_lower<sp/>=<sp/></highlight><highlight class="keyword">size</highlight><highlight class="normal">(local_solver_vars%N_LOWER)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>size_upper+size_lower+problem1%neq</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>problem1%neq</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(x(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(x0)))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x0</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">!<sp/>RUN_MISQP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_ls<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(g_ls(m+me+1))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ls(1:(m+me+1))=0</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(g_aux(m))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_aux(1:m)=0</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(x_best(n))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(g_best(m+me))<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(x_ls(n+1))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(xl_ls(n+1))</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(xu_ls(n+1))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(u(m+n+n)<sp/>)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(b(n+1,n+1)<sp/><sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(dg(m+problem1%neq+1,<sp/>n+1)<sp/>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(df(n+1)<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_ls=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xl_ls=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xu_ls=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df=</highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(0d0,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifail<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>MAXIT<sp/>:<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>iterations,<sp/>where<sp/>one<sp/>iteration<sp/>corresponds<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>evaluation<sp/>of<sp/>a<sp/>set<sp/>of<sp/>gradients<sp/>(e.g.<sp/>100).<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxit=<sp/>500</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>MAXPEN<sp/>:<sp/><sp/>Maximum<sp/>number<sp/>of<sp/>successive<sp/>increments<sp/>of<sp/>the<sp/>penalty<sp/>parameter<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>without<sp/>success<sp/>(e.g.<sp/>50).<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxpen=50</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>MAXUND<sp/>:<sp/><sp/>Maximum<sp/>number<sp/>of<sp/>successive<sp/>iterations<sp/>without<sp/>improvements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>iterate<sp/>X<sp/>(e.g.<sp/>10).<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxund=50</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>MAXNDE<sp/>:<sp/><sp/>Maximum<sp/>number<sp/>of<sp/>branch-and-bound<sp/>steps<sp/>for<sp/>solving<sp/>MIQP.<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxnde=10000</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>NONMON<sp/>:<sp/><sp/>Maximum<sp/>number<sp/>of<sp/>successive<sp/>iterations,<sp/>which<sp/>are<sp/>to<sp/>be<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>considered<sp/>for<sp/>the<sp/>non-monotone<sp/>trust<sp/>region<sp/>algorithm.<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonmon=2</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=0</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accqp<sp/>=<sp/></highlight><highlight class="keywordtype">REAL</highlight><highlight class="normal">(1d-12,kind=selected_real_kind(p=precision_d,r=range_d))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resopt=.true.</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mme=m+me</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iprint<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfunc<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngrad<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>EVALUATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfunc<sp/>=<sp/>nfunc<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idp<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>callfitnessfunctionfortranopenmp2(fitnessfunction,<sp/>exp1,<sp/>x,<sp/>g,<sp/>idp)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>GRADIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngrad<sp/>=<sp/>ngrad<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmp_pos<sp/>=<sp/>getopenmpoption(exp1)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openmp_pos<sp/>.EQ.<sp/>1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>evaluate_gradient_parallel(<sp/>problem1,<sp/>exp1,<sp/>opts1,<sp/>x,<sp/>f,<sp/><sp/>g,<sp/>ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>local_solver_vars%fobj_mysqp,<sp/>&amp;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%pass_misqp,<sp/>problem1%neq,<sp/>fitnessfunction<sp/><sp/>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>evaluate_gradient(<sp/>problem1,<sp/>exp1,<sp/>opts1,<sp/>x,<sp/>f,<sp/><sp/>g,<sp/>ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>local_solver_vars%fobj_mysqp,<sp/>&amp;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%pass_misqp,<sp/>problem1%neq,<sp/>fitnessfunction)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>evaluate_gradient(<sp/>problem1,<sp/>exp1,<sp/>opts1,<sp/>x,<sp/>f,<sp/><sp/>g,<sp/>ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>local_solver_vars%fobj_mysqp,<sp/>&amp;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%pass_misqp,<sp/>problem1%neq,<sp/>fitnessfunction)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_best=x</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_best=f</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_best=g</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_ls<sp/>=<sp/>f</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(problem1%ineq<sp/>.GT.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ls(1:m)<sp/>=<sp/>g</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_ls(1:n)=<sp/>x</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xl_ls(1:n)<sp/>=<sp/>problem1%xl</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xu_ls(1:n)<sp/>=<sp/>problem1%xu</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exitloop<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ite<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">DO</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">WHILE</highlight><highlight class="normal"><sp/>(<sp/>(ifail<sp/>.LE.<sp/>0)<sp/>.AND.<sp/>(exitloop<sp/>.NE.<sp/>1))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifail<sp/>.EQ.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrw<sp/>=<sp/>22*n+11*m+6*me+2*nonmon+85</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liw=problem1%int_var+problem1%bin_var+16</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llw=15<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(<sp/>rw<sp/>))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(rw)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(<sp/>iw<sp/>))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(iw)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(<sp/>lw<sp/>))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(lw)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(rw(lrw))</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(iw(liw))</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">ALLOCATE</highlight><highlight class="normal">(lw(llw))</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rw<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iw<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lw<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>misqp(m,me,n,problem1%int_var,problem1%bin_var,x_ls,f_ls,g_ls,df,dg,u,xl_ls,xu_ls,b,<sp/>&amp;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc,accqp,maxit,maxpen,maxund,resopt,<sp/>&amp;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonmon,iprint,mode,ifail,<sp/>&amp;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rw,lrw,iw,liw,lw,llw,maxnde)<sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifail<sp/>.EQ.<sp/>-1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfunc<sp/>=<sp/>nfunc+1</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=x_ls(1:n)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_aux=g_ls(1:m)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>callfitnessfunctionfortranopenmp2(fitnessfunction,<sp/>exp1,<sp/>x,<sp/>g_aux,<sp/>0)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_ls<sp/>=<sp/>f</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(problem1%ineq<sp/>.GT.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ls<sp/>=<sp/>g</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfunc<sp/>.GE.<sp/>local_solver_vars%evals_per_iter)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifail=0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_ls(1:n)=x_best</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_ls=f_best</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ls(1:m+me)=g_best<sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifail<sp/>.EQ.<sp/>-2)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngrad=ngrad+1</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENMP</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>evaluate_gradient_parallel(<sp/>problem1,<sp/>exp1,<sp/>opts1,<sp/>x_ls,<sp/>f_ls,<sp/><sp/>g_ls,ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>&amp;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%fobj_mysqp,<sp/>local_solver_vars%pass_misqp,problem1%neq,<sp/>fitnessfunction<sp/><sp/>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALL<sp/>evaluate_gradient(<sp/>problem1,<sp/>exp1,<sp/>opts1,<sp/>x_ls,<sp/>f_ls,<sp/><sp/>g_ls,ncont,<sp/>nfunc,<sp/>m,<sp/>df,<sp/>dg,<sp/>&amp;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_solver_vars%fobj_mysqp,<sp/>local_solver_vars%pass_misqp,problem1%neq,<sp/>fitnessfunction<sp/><sp/>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MPI2</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mig<sp/>=<sp/>cooperativempitestess(exp1,<sp/>dest<sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mig<sp/>.EQ.<sp/>1)<sp/>exitloop<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifail<sp/>.GE.<sp/>0)<sp/>exitloop<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ite<sp/>=<sp/>ite<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_ls<sp/>.LT.<sp/>f_best)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_best=x_ls(1:n)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_best=f_ls</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_best=g_ls(1:m+me)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">END<sp/>DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0=x_ls</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fval=f_ls</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(problem1%ineq<sp/>.GT.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g=g_ls</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(local_solver_vars%N_UPPER)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(local_solver_vars%N_UPPER)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(local_solver_vars%N_LOWER)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(local_solver_vars%N_LOWER)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(u)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(u)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(b)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(b)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(dg)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(dg)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(df)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(df)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(g_ls)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(g_ls)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(x_ls)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(x_ls)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(g_best)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(g_best)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(x_best)<sp/>)<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(x_best)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(xl_ls))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(xl_ls)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(xu_ls))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(xu_ls)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(x))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(x)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">IF</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">ALLOCATED</highlight><highlight class="normal">(g_aux))<sp/></highlight><highlight class="keyword">DEALLOCATE</highlight><highlight class="normal">(g_aux)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">END<sp/>SUBROUTINE<sp/></highlight><highlight class="normal">run_misqp</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">END<sp/>MODULE<sp/></highlight><highlight class="normal"><ref refid="classmisqp__interface" kindref="compound">misqp_interface</ref></highlight></codeline>
    </programlisting>
    <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/src/method_module_fortran/eSS/localsolvers/misqp/misqp_interface.f90"/>
  </compounddef>
</doxygen>
