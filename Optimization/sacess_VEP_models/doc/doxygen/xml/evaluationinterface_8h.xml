<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="evaluationinterface_8h" kind="file">
    <compoundname>evaluationinterface.h</compoundname>
    <includedby refid="solversinterface_8c" local="no">src/method_module/solversinterface.c</includedby>
    <invincdepgraph>
      <node id="77">
        <label>src/method_module/solversinterface.c</label>
        <link refid="solversinterface_8c_source"/>
      </node>
      <node id="76">
        <label>include/method_module/evaluationinterface.h</label>
        <link refid="evaluationinterface.h"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="evaluationinterface_8h_1afde22c194566721355186b640429343b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DE_correction_bounds</definition>
        <argsstring>(double *, int, double *, double *)</argsstring>
        <name>DE_correction_bounds</name>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h" line="2" bodyfile="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/src/method_module/evaluationinterface.c" bodystart="22" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="evaluationinterface_8h_1a07ed6b58069566e8d4c139519dcaea7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DE_correction_bounds2</definition>
        <argsstring>(double *X, int D, double *Xl, double *Xu)</argsstring>
        <name>DE_correction_bounds2</name>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int</type>
          <declname>D</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Xl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Xu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h" line="4" bodyfile="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/src/method_module/evaluationinterface.c" bodystart="39" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="evaluationinterface_8h_1a1ceba6927c5695613354cd8e6b0a066b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double callfitnessfunction_</definition>
        <argsstring>(void *(*fitnessfunction)(double *, void *), void *, double *, int *, double *, double *)</argsstring>
        <name>callfitnessfunction_</name>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h" line="6" bodyfile="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/src/method_module/evaluationinterface.c" bodystart="58" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="evaluationinterface_8h_1a859f4b3cb85bdfa4a1f7e910f655aaab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double callfitnessfunctionfortran_</definition>
        <argsstring>(void *(*fitnessfunction)(double *, void *, double *), void *, double *, int *, double *, double *, double *)</argsstring>
        <name>callfitnessfunctionfortran_</name>
        <param>
          <type>void *(*)(double *, void *, double *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h" line="8"/>
      </memberdef>
      <memberdef kind="function" id="evaluationinterface_8h_1a714f8d6a6a594c1c2504e798f104208d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double callfitnessfunctionopenmp_</definition>
        <argsstring>(void *(*fitnessfunction)(double *, void *), void *, double *, int *, double *, double *, int *)</argsstring>
        <name>callfitnessfunctionopenmp_</name>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h" line="10" bodyfile="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/src/method_module/evaluationinterface.c" bodystart="225" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="evaluationinterface_8h_1a493e1fcdd4965d8305c127249a3d7136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double callfitnessfunctionfortranopenmp2_</definition>
        <argsstring>(void *(*fitnessfunction)(double *, void *), void *, double *, double *, int *)</argsstring>
        <name>callfitnessfunctionfortranopenmp2_</name>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h" line="12" bodyfile="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/src/method_module/evaluationinterface.c" bodystart="192" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DE_correction_bounds(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DE_correction_bounds2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Xl,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Xu);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>callfitnessfunction_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>callfitnessfunctionfortran_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>callfitnessfunctionopenmp_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>callfitnessfunctionfortranopenmp2_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
    </programlisting>
    <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/evaluationinterface.h"/>
  </compounddef>
</doxygen>
