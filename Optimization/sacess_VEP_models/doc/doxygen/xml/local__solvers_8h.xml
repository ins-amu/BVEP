<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="local__solvers_8h" kind="file">
    <compoundname>local_solvers.h</compoundname>
    <includes refid="structure__paralleltestbed_8h" local="no">structure_paralleltestbed.h</includes>
    <incdepgraph>
      <node id="87">
        <label>structure_paralleltestbed.h</label>
        <link refid="structure__paralleltestbed_8h_source"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>include/method_module/local_solvers.h</label>
        <link refid="local_solvers.h"/>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>time.h</label>
      </node>
      <node id="91">
        <label>gsl/gsl_randist.h</label>
      </node>
      <node id="90">
        <label>gsl/gsl_rng.h</label>
      </node>
      <node id="89">
        <label>AMIGO_problem.h</label>
      </node>
      <node id="88">
        <label>bbobStructures.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="local__solvers_8h_1a7c48f9ccc4960189a2061f114a0ad4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initlocalsolvervars_</definition>
        <argsstring>(void *)</argsstring>
        <name>initlocalsolvervars_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h" line="4"/>
      </memberdef>
      <memberdef kind="function" id="local__solvers_8h_1a6fb134caaa049d3fd73e7b55c0d83653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void call_to_local_solver_N2SOL</definition>
        <argsstring>(experiment_total *, local_solver *, output_struct *, double *, double *, void *(*fitnessfunction)(double *, void *), int, int, int, int, int *, void *, int *, int *)</argsstring>
        <name>call_to_local_solver_N2SOL</name>
        <param>
          <type><ref refid="structexperiment__total" kindref="compound">experiment_total</ref> *</type>
        </param>
        <param>
          <type><ref refid="structlocal__solver" kindref="compound">local_solver</ref> *</type>
        </param>
        <param>
          <type><ref refid="structoutput__struct" kindref="compound">output_struct</ref> *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h" line="8"/>
      </memberdef>
      <memberdef kind="function" id="local__solvers_8h_1a8abc849e718b9147afbd06bf37f9c2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void localsolverinterface_</definition>
        <argsstring>(void *, void *, void *, void *(*fitnessfunction)(double *, void *), double *, int *, double *, int *, int *, double *, int *, int *)</argsstring>
        <name>localsolverinterface_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h" line="11"/>
      </memberdef>
      <memberdef kind="function" id="local__solvers_8h_1aa01926b4dade21844bb7cb5b723b5c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void localsolverinterfacefortran_</definition>
        <argsstring>(void *, void *, void *, void *(*fitnessfunction)(double *, void *), double *, int *, double *, int *, int *, double *, int *, int *)</argsstring>
        <name>localsolverinterfacefortran_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h" line="15"/>
      </memberdef>
      <memberdef kind="function" id="local__solvers_8h_1a877de03512debd251ef776a840c1fffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addlocalscounter_</definition>
        <argsstring>(void *)</argsstring>
        <name>addlocalscounter_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h" line="18"/>
      </memberdef>
      <memberdef kind="function" id="local__solvers_8h_1afdcc9683b5ac9d29a5cf4bfe065a1780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addlocalscounterfortran_</definition>
        <argsstring>(void *)</argsstring>
        <name>addlocalscounterfortran_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h" line="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;structure_paralleltestbed.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initlocalsolvervars_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>call_to_local_solver_N2SOL(<ref refid="structexperiment__total" kindref="compound">experiment_total</ref><sp/>*,<sp/><ref refid="structlocal__solver" kindref="compound">local_solver</ref><sp/>*,<sp/><ref refid="structoutput__struct" kindref="compound">output_struct</ref><sp/>*,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>localsolverinterface_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>localsolverinterfacefortran_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addlocalscounter_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addlocalscounterfortran_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
    </programlisting>
    <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/local_solvers.h"/>
  </compounddef>
</doxygen>
