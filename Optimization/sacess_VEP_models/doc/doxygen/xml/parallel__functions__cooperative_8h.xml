<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="parallel__functions__cooperative_8h" kind="file">
    <compoundname>parallel_functions_cooperative.h</compoundname>
    <includes refid="structure__paralleltestbed_8h" local="no">structure_paralleltestbed.h</includes>
    <incdepgraph>
      <node id="102">
        <label>include/method_module/parallel_functions_cooperative.h</label>
        <link refid="parallel_functions_cooperative.h"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>structure_paralleltestbed.h</label>
        <link refid="structure__paralleltestbed_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>time.h</label>
      </node>
      <node id="107">
        <label>gsl/gsl_randist.h</label>
      </node>
      <node id="106">
        <label>gsl/gsl_rng.h</label>
      </node>
      <node id="105">
        <label>AMIGO_problem.h</label>
      </node>
      <node id="104">
        <label>bbobStructures.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1af77a2635e19f056583e820c29aaf8c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setnproc_</definition>
        <argsstring>(void *, int *)</argsstring>
        <name>setnproc_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="3"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a3342b4dc215637512f0b3b4a60f2d325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asynchronousstoppingcriteria_</definition>
        <argsstring>(void *, int *, long *, double *, double *, double *, int *)</argsstring>
        <name>asynchronousstoppingcriteria_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="5"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a063bd8d07fbddd2a1736fc086a4c380f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gatherresultsserialize_</definition>
        <argsstring>(void *, double *, double *, int *, double *, double *, long *, long *)</argsstring>
        <name>gatherresultsserialize_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="7"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1ae0e898bb809b25206ef585b7dfac2c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createcooperativetopology_</definition>
        <argsstring>(void *)</argsstring>
        <name>createcooperativetopology_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="9"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a61d44b5c29b218370d24e3f53d82763f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createcooperativestructs_</definition>
        <argsstring>(void *, int *)</argsstring>
        <name>createcooperativestructs_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="11"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a7846d70ad51dd2b440ce9af2dcb36e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cooperativedist_</definition>
        <argsstring>(void *, double *, int *, double *)</argsstring>
        <name>cooperativedist_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="13"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a0b387417f184904a2651dccaab139d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cooperativedistelement_</definition>
        <argsstring>(void *, double *, int *, double *)</argsstring>
        <name>cooperativedistelement_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="15"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a7d04c179eff4ad7fd824d3c386518aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cooperativebcastelement_</definition>
        <argsstring>(void *, double *, int *, int *)</argsstring>
        <name>cooperativebcastelement_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="17"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a62d27e28c84e37cc53a9ff9ea44f347c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cooperativebcastelementint_</definition>
        <argsstring>(void *, int *, int *)</argsstring>
        <name>cooperativebcastelementint_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="19"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a56ee3553c1e013e8b01d1270fecf1d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int destroycooperativestructures_</definition>
        <argsstring>(void *)</argsstring>
        <name>destroycooperativestructures_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="21"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1aec565ed15f06a313bebb11ca4bf96195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initcooperativestoppingcriteria_</definition>
        <argsstring>(void *)</argsstring>
        <name>initcooperativestoppingcriteria_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="23"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a1e146fde0a380097f926450e944cf0fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int checkcooperativemigrationcriteria_</definition>
        <argsstring>(void *)</argsstring>
        <name>checkcooperativemigrationcriteria_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1aa1d9858f98437b548385bf448c35de48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void migrationcooperativesent_</definition>
        <argsstring>(void *, double *, int *, int *, double *, double *, int *)</argsstring>
        <name>migrationcooperativesent_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a0fb68eebd5db3cdfe974df22bda92ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void migrationcooperativereception_</definition>
        <argsstring>(void *, void *(*fitnessfunction)(double *, void *), double *, int *, int *, double *, double *, int *)</argsstring>
        <name>migrationcooperativereception_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *(*)(double *, void *)</type>
          <declname>fitnessfunction</declname>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="29"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a54f20147e25e575f2cbe4294e3457b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asynchronousstoppingcriteriawithrestart_</definition>
        <argsstring>(void *, int *, long *, double *, double *, int *)</argsstring>
        <name>asynchronousstoppingcriteriawithrestart_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="31"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1adba3e4e8ff51dbcb1d71a87b0cae31ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void synchronousstoppingcriteriawithrestart_</definition>
        <argsstring>(void *, int *, long *, double *, double *, int *)</argsstring>
        <name>synchronousstoppingcriteriawithrestart_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="33"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a266e4c070b3c55ff54d3d1d229791b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cooperativempitest_</definition>
        <argsstring>(void *, int *)</argsstring>
        <name>cooperativempitest_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a7833aa1b9c48f44d0945cff75fd28d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gatherresults_</definition>
        <argsstring>(void *, double *, double *, int *, double *, double *, long *, long *)</argsstring>
        <name>gatherresults_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <param>
          <type>long *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1ac54a5e6417aef5d7fd396c6f94908ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void migrationsynchcooperativesent_</definition>
        <argsstring>(void *, int *, double *, double *, double *, double *, double *)</argsstring>
        <name>migrationsynchcooperativesent_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a303b6934c78aee7943d65590ae6eb4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setcountstopsvar_</definition>
        <argsstring>(void *, int *, int *)</argsstring>
        <name>setcountstopsvar_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a61901be438db833588b5b60076a36c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroysendbuffer_</definition>
        <argsstring>(void *)</argsstring>
        <name>destroysendbuffer_</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a8719f2f567317b488edad56b408efd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double* returnssendbuffer_</definition>
        <argsstring>(void *, int *, double *)</argsstring>
        <name>returnssendbuffer_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a38e075fef809b022730ec99a1aac8cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double* initsendbuffer_</definition>
        <argsstring>(void *, int *)</argsstring>
        <name>initsendbuffer_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1aae947952b15a498c048711d8909fd8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setexpexecutionstuckcount</definition>
        <argsstring>(void *, int *)</argsstring>
        <name>setexpexecutionstuckcount</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a12e67b6bcd7f64112de10753f38f0586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getexpexecutionstuckcount</definition>
        <argsstring>(void *)</argsstring>
        <name>getexpexecutionstuckcount</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a4a4c5a4b686a80731a9c70d6f32383e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initcooperativestoppingcriteria</definition>
        <argsstring>(void *)</argsstring>
        <name>initcooperativestoppingcriteria</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1ad01964760e5e874302d7acbeb520b1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double* seriallizevector_</definition>
        <argsstring>(double *, double *, double *, double *, double *, int *, int *, int *, double *)</argsstring>
        <name>seriallizevector_</name>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1aa738729909e839908f7da5055aab2597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sizeseriallize_</definition>
        <argsstring>(int *, int *, double *)</argsstring>
        <name>sizeseriallize_</name>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1aa5d30d58436c6aaa0c7360e1998aff1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void returnmaxelementint_</definition>
        <argsstring>(void *, int *, int *)</argsstring>
        <name>returnmaxelementint_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a654f4d629b6d8307962e57f9dddd63d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void returnminelementint_</definition>
        <argsstring>(void *, int *, int *)</argsstring>
        <name>returnminelementint_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1a120b19160de38b15f6b9ab85f6b57c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void returnminelement_</definition>
        <argsstring>(void *exp, double *, double *)</argsstring>
        <name>returnminelement_</name>
        <param>
          <type>void *</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="parallel__functions__cooperative_8h_1af3d27e8c497541ef210d93da8ce6e94e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void returnminlocelement_</definition>
        <argsstring>(void *, double *, double *, int *, int *)</argsstring>
        <name>returnminlocelement_</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>double *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h" line="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;structure_paralleltestbed.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setnproc_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asynchronousstoppingcriteria_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gatherresultsserialize_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createcooperativetopology_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createcooperativestructs_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cooperativedist_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cooperativedistelement_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cooperativebcastelement_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cooperativebcastelementint_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destroycooperativestructures_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initcooperativestoppingcriteria_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>checkcooperativemigrationcriteria_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>migrationcooperativesent_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>migrationcooperativereception_(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*(*fitnessfunction)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asynchronousstoppingcriteriawithrestart_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>synchronousstoppingcriteriawithrestart_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cooperativempitest_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gatherresults_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>migrationsynchcooperativesent_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setcountstopsvar_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroysendbuffer_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>returnssendbuffer_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>initsendbuffer_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setexpexecutionstuckcount(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getexpexecutionstuckcount(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initcooperativestoppingcriteria(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>seriallizevector_<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeseriallize_(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>returnmaxelementint_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>returnminelementint_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>returnminelement_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*exp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>returnminlocelement_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
    </programlisting>
    <location file="/home/david/traballos/paralleltestbed/REPO_GIT/REPOSITORIO/SACESS_TOOLS/include/method_module/parallel_functions_cooperative.h"/>
  </compounddef>
</doxygen>
